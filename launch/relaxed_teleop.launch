<launch>
    <arg name="xacro_path"   default="$(find ur5_allegro_moveit)/models/ur5_allegro.xacro" />
    <arg name="teleop_mode_absolute"   default="true"/>
    <arg name="sim"   default="true"/>

    <arg name="urdf_args"   default=""/>
    <arg name="load_xacro"   default="true"/>
    <arg name="viz"   default="true"/>
 
    <include file="$(find relaxed_ik)/launch/load_info_file.launch">
            <arg name="info_file_name" value="ur5_allegro_info.yaml"/>            
    </include>



    <include  file="$(find ur5_allegro_moveit)/launch/demo.launch">
        <arg name="rviz" value="false"/>
    </include>
    <!-- <include unless="$(arg sim)" file="$(find ur5_allegro_moveit)/launch/move_group.launch"> -->
            <!-- <arg name="allow_trajectory_execution" value="true"/> -->
            <!-- <arg name="fake_execution" value="false"/> -->
            <!-- <arg name="info" value="true"/> -->
            <!-- <arg name="debug" value="False"/> -->
    <!-- </include> -->
<!--  -->
    <!-- Load Xacro file -->
    <!-- <group if="$(arg load_xacro)">  -->
        <!-- <param name="robot_description" command="xacro '$(arg xacro_path)' $(arg urdf_args)"/> -->
        <!-- <node pkg="tf2_ros" type="static_transform_publisher" name="base2common_world" args="0 0 0 0 0 0 1 base common_world" /> -->
    <!-- </group> -->
    <!-- Launch Robot State Publisher -->
    <!-- <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" ns="/" > -->
        <!-- <param name="publish_frequency" type="double" value="60.0" /> -->
        <!-- <param name="tf_prefix" type="string" value="" /> -->
    <!-- </node> -->



    <!-- Launch RelaxedIK -->
    <node pkg="relaxed_ik" type="relaxed_ik_node.py" name="relaxed_ik_node" output="log"/>
    <!-- <rosparam command="load" file="$(find teleoperation_ur5_allegro_leap)/src/teleoperation_ur5_allegro_leap/teleop/ur5/config/ur5_ee_bounds.yaml" /> -->
    <group>
        <node pkg="virtuose_teleoperation" type="relaxed_ik_solution_manager.py" name="relaxedIK2UR5" output="screen"/>
        <!-- <node pkg="virtuose_teleoperation" type="relaxed_cartesian_mapping.py" name="Haption2relaxedIK" output="screen"/> -->
    </group>
    <!-- <node pkg="teleoperation_ur5_allegro_leap" type="relaxed_ik_request_interface.py" name="ur5_2_relaxedIK" output="screen">
        <param name="/ur5_allegro_teleop/ur5/teleop_mode_absolute" type="bool" value="$(arg teleop_mode_absolute)" />
        <param name="workspace_yaml" type="string" value="$(find teleoperation_ur5_allegro_leap)/src/teleoperation_ur5_allegro_leap/teleop/ur5/config/ur5_ee_bounds.yaml" />
        <param name="simulated" type="bool" value="$(arg sim)" />
    </node> -->

    <group if="$(arg viz)">
        <node name="teleop_rviz" pkg="rviz" type="rviz" args="-d $(find virtuose_teleoperation)/rviz/virtuose_teleop.rviz" />
    </group>
</launch>